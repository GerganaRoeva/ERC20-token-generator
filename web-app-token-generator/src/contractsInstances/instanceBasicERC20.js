const abi = [
  {
    "inputs": [
      {
        "internalType": "string",
        "name": "name_",
        "type": "string"
      },
      {
        "internalType": "string",
        "name": "symbol_",
        "type": "string"
      },
      {
        "internalType": "uint256",
        "name": "totalSupply_",
        "type": "uint256"
      },
      {
        "internalType": "uint8",
        "name": "decimals_",
        "type": "uint8"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "constructor"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "owner",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "spender",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "value",
        "type": "uint256"
      }
    ],
    "name": "Approval",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "from",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "to",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "value",
        "type": "uint256"
      }
    ],
    "name": "Transfer",
    "type": "event"
  },
  {
    "inputs": [],
    "name": "name",
    "outputs": [
      {
        "internalType": "string",
        "name": "",
        "type": "string"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "symbol",
    "outputs": [
      {
        "internalType": "string",
        "name": "",
        "type": "string"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "decimals",
    "outputs": [
      {
        "internalType": "uint8",
        "name": "",
        "type": "uint8"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "totalSupply",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "account",
        "type": "address"
      }
    ],
    "name": "balanceOf",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "owner",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "spender",
        "type": "address"
      }
    ],
    "name": "allowance",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "to",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "amount",
        "type": "uint256"
      }
    ],
    "name": "transfer",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "from",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "to",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "amount",
        "type": "uint256"
      }
    ],
    "name": "transferFrom",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "spender",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "amount",
        "type": "uint256"
      }
    ],
    "name": "approve",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "function"
  }
];

const bytecode = "0x60806040523480156200001157600080fd5b50604051620015583803806200155883398181016040528101906200003791906200039e565b83600290805190602001906200004f929190620000d8565b50826003908051906020019062000068929190620000d8565b508160058190555080600460006101000a81548160ff021916908360ff160217905550816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050505050620004b3565b828054620000e6906200047d565b90600052602060002090601f0160209004810192826200010a576000855562000156565b82601f106200012557805160ff191683800117855562000156565b8280016001018555821562000156579182015b828111156200015557825182559160200191906001019062000138565b5b50905062000165919062000169565b5090565b5b80821115620001845760008160009055506001016200016a565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620001f182620001a6565b810181811067ffffffffffffffff82111715620002135762000212620001b7565b5b80604052505050565b60006200022862000188565b9050620002368282620001e6565b919050565b600067ffffffffffffffff821115620002595762000258620001b7565b5b6200026482620001a6565b9050602081019050919050565b60005b838110156200029157808201518184015260208101905062000274565b83811115620002a1576000848401525b50505050565b6000620002be620002b8846200023b565b6200021c565b905082815260208101848484011115620002dd57620002dc620001a1565b5b620002ea84828562000271565b509392505050565b600082601f8301126200030a57620003096200019c565b5b81516200031c848260208601620002a7565b91505092915050565b6000819050919050565b6200033a8162000325565b81146200034657600080fd5b50565b6000815190506200035a816200032f565b92915050565b600060ff82169050919050565b620003788162000360565b81146200038457600080fd5b50565b60008151905062000398816200036d565b92915050565b60008060008060808587031215620003bb57620003ba62000192565b5b600085015167ffffffffffffffff811115620003dc57620003db62000197565b5b620003ea87828801620002f2565b945050602085015167ffffffffffffffff8111156200040e576200040d62000197565b5b6200041c87828801620002f2565b93505060406200042f8782880162000349565b9250506060620004428782880162000387565b91505092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200049657607f821691505b60208210811415620004ad57620004ac6200044e565b5b50919050565b61109580620004c36000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063313ce56711610066578063313ce5671461013457806370a082311461015257806395d89b4114610182578063a9059cbb146101a0578063dd62ed3e146101d057610093565b806306fdde0314610098578063095ea7b3146100b657806318160ddd146100e657806323b872dd14610104575b600080fd5b6100a0610200565b6040516100ad91906109e1565b60405180910390f35b6100d060048036038101906100cb9190610a9c565b610292565b6040516100dd9190610af7565b60405180910390f35b6100ee6102ae565b6040516100fb9190610b21565b60405180910390f35b61011e60048036038101906101199190610b3c565b6102b8565b60405161012b9190610af7565b60405180910390f35b61013c6102e0565b6040516101499190610bab565b60405180910390f35b61016c60048036038101906101679190610bc6565b6102f7565b6040516101799190610b21565b60405180910390f35b61018a61033f565b60405161019791906109e1565b60405180910390f35b6101ba60048036038101906101b59190610a9c565b6103d1565b6040516101c79190610af7565b60405180910390f35b6101ea60048036038101906101e59190610bf3565b6103ed565b6040516101f79190610b21565b60405180910390f35b60606002805461020f90610c62565b80601f016020809104026020016040519081016040528092919081815260200182805461023b90610c62565b80156102885780601f1061025d57610100808354040283529160200191610288565b820191906000526020600020905b81548152906001019060200180831161026b57829003601f168201915b5050505050905090565b6000803390506102a3818585610474565b600191505092915050565b6000600554905090565b6000803390506102c9858285610651565b6102d48585856106dd565b60019150509392505050565b6000600460009054906101000a900460ff16905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606003805461034e90610c62565b80601f016020809104026020016040519081016040528092919081815260200182805461037a90610c62565b80156103c75780601f1061039c576101008083540402835291602001916103c7565b820191906000526020600020905b8154815290600101906020018083116103aa57829003601f168201915b5050505050905090565b6000803390506103e28185856106dd565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156104e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104db90610d06565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610554576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054b90610d98565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105e09190610de7565b925050819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516106449190610b21565b60405180910390a3505050565b600061065d84846103ed565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146106d757818110156106c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c090610e89565b60405180910390fd5b6106d68484848403610474565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561074d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074490610f1b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156107bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b490610fad565b60405180910390fd5b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610843576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083a9061103f565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546108d69190610de7565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161093a9190610b21565b60405180910390a350505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610982578082015181840152602081019050610967565b83811115610991576000848401525b50505050565b6000601f19601f8301169050919050565b60006109b382610948565b6109bd8185610953565b93506109cd818560208601610964565b6109d681610997565b840191505092915050565b600060208201905081810360008301526109fb81846109a8565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a3382610a08565b9050919050565b610a4381610a28565b8114610a4e57600080fd5b50565b600081359050610a6081610a3a565b92915050565b6000819050919050565b610a7981610a66565b8114610a8457600080fd5b50565b600081359050610a9681610a70565b92915050565b60008060408385031215610ab357610ab2610a03565b5b6000610ac185828601610a51565b9250506020610ad285828601610a87565b9150509250929050565b60008115159050919050565b610af181610adc565b82525050565b6000602082019050610b0c6000830184610ae8565b92915050565b610b1b81610a66565b82525050565b6000602082019050610b366000830184610b12565b92915050565b600080600060608486031215610b5557610b54610a03565b5b6000610b6386828701610a51565b9350506020610b7486828701610a51565b9250506040610b8586828701610a87565b9150509250925092565b600060ff82169050919050565b610ba581610b8f565b82525050565b6000602082019050610bc06000830184610b9c565b92915050565b600060208284031215610bdc57610bdb610a03565b5b6000610bea84828501610a51565b91505092915050565b60008060408385031215610c0a57610c09610a03565b5b6000610c1885828601610a51565b9250506020610c2985828601610a51565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610c7a57607f821691505b60208210811415610c8e57610c8d610c33565b5b50919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000610cf0602483610953565b9150610cfb82610c94565b604082019050919050565b60006020820190508181036000830152610d1f81610ce3565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000610d82602283610953565b9150610d8d82610d26565b604082019050919050565b60006020820190508181036000830152610db181610d75565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610df282610a66565b9150610dfd83610a66565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e3257610e31610db8565b5b828201905092915050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000610e73601d83610953565b9150610e7e82610e3d565b602082019050919050565b60006020820190508181036000830152610ea281610e66565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000610f05602583610953565b9150610f1082610ea9565b604082019050919050565b60006020820190508181036000830152610f3481610ef8565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000610f97602383610953565b9150610fa282610f3b565b604082019050919050565b60006020820190508181036000830152610fc681610f8a565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000611029602683610953565b915061103482610fcd565b604082019050919050565b600060208201905081810360008301526110588161101c565b905091905056fea2646970667358221220c1e60b77d5000d261c064f2a61696fb2823be03fda9dc3577422b0e6b235b2ee64736f6c634300080c0033";

// var fs = require('fs');
//
// const jsonBasicERC20 = JSON.parse(fs.readFileSync("../../tokens/build/contracts/BasicERC20.json", "utf8"));
//
// const dataOfContract = [jsonBasicERC20.abi, jsonBasicERC20.bytecode];

// const dataOfContract = [abi, bytecode];

export {abiBasic, bytecodeBasic};
